{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FiercePC\\\\Desktop\\\\react apps\\\\react-calculator\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport \"./styles.css\";\nimport React from 'react';\nimport { useReducer } from 'react';\nimport DigitButton from './DigitButton';\nimport OperationButton from './OperationButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ACTIONS = {\n  ADD_DIGIT: 'add-digit',\n  CHOOSE_OPERATION: 'choose-operation',\n  CLEAR: 'clear',\n  DELETE_DIGIT: 'delete-digit',\n  EVALUATE: 'evaluate'\n};\n\nfunction reducer(state, _ref) {\n  let {\n    type,\n    payload\n  } = _ref;\n\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return { ...state,\n          currentOperand: payload.digit,\n          overwrite: false\n        };\n      }\n\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state;\n      }\n\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) {\n        return state;\n      }\n\n      return { ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`\n      };\n\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state;\n      }\n\n      if (state.currentOperand == null) {\n        return { ...state,\n          operation: payload.operation\n        };\n      }\n\n      if (state.previousOperand == null) {\n        return { ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null\n        };\n      }\n\n      return { ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null\n      };\n\n    case ACTIONS.CLEAR:\n      return {};\n\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return { ...state,\n          overwrite: false,\n          currentOperand: null\n        };\n      }\n\n      if (state.currentOperand === null) return state;\n\n      if (state.currentOperand.length === 1) {\n        return { ...state,\n          currentOperand: null\n        };\n      }\n\n      return { ...state,\n        currentOperand: state.currentOperand.slice(0, -1)\n      };\n\n    case ACTIONS.EVALUATE:\n      if (state.operation == null || state.currentOperand == null || state.previousOperand == null) {\n        return state;\n      }\n\n      return { ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state)\n      };\n  }\n}\n\nfunction evaluate(_ref2) {\n  let {\n    currentOperand,\n    previousOperand,\n    operation\n  } = _ref2;\n  const prev = parseFloat(previousOperand);\n  const current = parseFloat(currentOperand);\n  if (isNaN(prev) || isNaN(current)) return \"\";\n  let computation = \"\";\n\n  switch (operation) {\n    case \"+\":\n      computation = prev + current;\n      break;\n\n    case \"-\":\n      computation = prev - current;\n      break;\n\n    case \"*\":\n      computation = prev * current;\n      break;\n\n    case \"รท\":\n      computation = prev / current;\n      break;\n  }\n\n  return computation.toString();\n}\n\nfunction App() {\n  _s();\n\n  const [{\n    currentOperand,\n    previousOperand,\n    operation\n  }, dispatch] = useReducer(reducer, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previous-operand\",\n        children: [previousOperand, \" \", operation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-opperand\",\n        children: currentOperand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.CLEAR\n      }),\n      children: \"AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: ACTIONS.DELETE_DIGIT\n      }),\n      children: \"DEL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"\\xF7\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"1\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"2\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"3\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"*\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"4\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"5\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"6\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"+\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"7\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"8\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"9\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"-\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \".\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"0\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.EVALUATE\n      }),\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"68AuaCkBm4JZJmRBNXbrgpWj4cg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/FiercePC/Desktop/react apps/react-calculator/src/App.js"],"names":["React","useReducer","DigitButton","OperationButton","ACTIONS","ADD_DIGIT","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","type","payload","overwrite","currentOperand","digit","includes","previousOperand","operation","evaluate","length","slice","prev","parseFloat","current","isNaN","computation","toString","App","dispatch"],"mappings":"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","sourcesContent":["\nimport './App.css';\n\nimport \"./styles.css\"\n\nimport React from 'react';\nimport {useReducer} from 'react';\nimport DigitButton from './DigitButton';\nimport OperationButton from './OperationButton';\n\nexport const ACTIONS = {\n  ADD_DIGIT: 'add-digit',\n  CHOOSE_OPERATION: 'choose-operation',\n  CLEAR: 'clear',\n  DELETE_DIGIT: 'delete-digit',\n  EVALUATE: 'evaluate'\n}\n\nfunction reducer(state, {type , payload}) {\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite){\n        return{\n        ...state,\n        currentOperand: payload.digit,\n        overwrite: false,\n        }\n      }\n        if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n          return state\n        }\n        if (payload.digit === \".\" && state.currentOperand.includes (\".\")) {\n          return state\n        }\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`,\n      }\n      case ACTIONS.CHOOSE_OPERATION:\n        if (state.currentOperand == null && state.previousOperand == null){\n          return state\n      }\n      if (state.currentOperand == null){\n        return{\n          ...state,\n          operation:payload.operation,\n        }\n      }\n      if (state.previousOperand == null){\n        return {\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null,\n        }\n      }\n      return{\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null\n      }\n      case ACTIONS.CLEAR:\n        return{}   \n      case ACTIONS.DELETE_DIGIT:\n        if (state.overwrite){\n           return{\n          ...state,\n          overwrite:false,\n          currentOperand: null\n        }  \n      }\n      if (state.currentOperand === null) return state\n      if (state.currentOperand.length === 1) {\n        return {...state, currentOperand:null}\n      }\n\n      return{\n        ...state,\n        currentOperand: state.currentOperand.slice(0, -1)\n      }\n      case ACTIONS.EVALUATE:\n        if (\n          state.operation == null ||\n          state.currentOperand == null ||\n          state.previousOperand == null\n        )     {\n          return state \n        }\n        return {\n          ...state,\n          overwrite: true,\n          previousOperand: null,\n          operation: null,\n          currentOperand: evaluate(state)\n        }\n  }\n}\nfunction evaluate({currentOperand, previousOperand, operation}){\n  const prev = parseFloat(previousOperand)\n  const current = parseFloat(currentOperand)\n  if (isNaN(prev) || isNaN(current)) return \"\"\n  let computation = \"\"\n  switch (operation) {\n    case \"+\":\n      computation = prev + current\n      break\n    case \"-\":\n      computation = prev - current\n      break\n    case \"*\": \n      computation = prev * current\n      break\n    case \"รท\":\n      computation = prev / current\n      break  \n  }\n  return computation.toString()\n}\n\nfunction App() {\n  const [{currentOperand, previousOperand, operation}, dispatch] = useReducer(reducer,{})\n\n\n  return (\n    <div className=\"calculator-grid\">\n      <div className=\"output\">\n        <div className=\"previous-operand\">{previousOperand} {operation}</div>\n        <div className=\"current-opperand\">{currentOperand}</div>\n      </div>\n      <button className=\"span-two\" onClick={() => dispatch({type: ACTIONS.CLEAR})}>AC</button>\n      <button onClick={() => dispatch({type: ACTIONS.DELETE_DIGIT})}>DEL</button>\n      <OperationButton operation='รท' dispatch={dispatch}/>\n      <DigitButton digit='1' dispatch={dispatch}/>\n      <DigitButton digit='2' dispatch={dispatch}/>\n      <DigitButton digit='3' dispatch={dispatch}/>\n      <OperationButton operation='*' dispatch={dispatch}/>\n      <DigitButton digit='4' dispatch={dispatch}/>\n      <DigitButton digit='5' dispatch={dispatch}/>\n      <DigitButton digit='6' dispatch={dispatch}/>\n      <OperationButton operation='+' dispatch={dispatch}/>\n      <DigitButton digit='7' dispatch={dispatch}/>\n      <DigitButton digit='8' dispatch={dispatch}/>\n      <DigitButton digit='9' dispatch={dispatch}/>\n      <OperationButton operation='-' dispatch={dispatch}/>\n      <DigitButton digit='.' dispatch={dispatch}/>\n      <DigitButton digit='0' dispatch={dispatch}/>\n      <button className=\"span-two\" onClick={() => dispatch({type: ACTIONS.EVALUATE})}>=</button>\n    </div>\n  )\n    \n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}